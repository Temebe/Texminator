find_package(Catch2 REQUIRED)

set(CMAKE_CXX_STANDARD 17)

add_executable (Texminator_tests test.cpp ../src/Scanner.cpp ../include/Scanner.h ../src/Source.cpp ../include/Source.h ../src/StandardSource.cpp ../include/StandardSource.h ../src/FileSource.cpp ../include/FileSource.h ../include/Token.h ../src/Token.cpp ../src/parser/Parser.cpp ../include/parser/Parser.h ../src/parser/statements/Statement.cpp ../include/parser/statements/Statement.h ../src/parser/expressions/Expression.cpp ../include/parser/expressions/Expression.h ../src/parser/Environment.cpp ../include/parser/Environment.h ../src/parser/Value.cpp ../include/parser/Value.h ../src/parser/Scope.cpp ../include/parser/Scope.h ../src/parser/statements/BlockStatement.cpp ../include/parser/statements/BlockStatement.h ../src/parser/Function.cpp ../include/parser/Function.h ../include/parser/ParserTraits.h ../src/parser/statements/IfStatement.cpp ../include/parser/statements/IfStatement.h ../src/parser/statements/BreakStatement.cpp ../include/parser/statements/BreakStatement.h ../src/parser/statements/ContinueStatement.cpp ../include/parser/statements/ContinueStatement.h ../src/parser/statements/ReturnStatement.cpp ../include/parser/statements/ReturnStatement.h ../include/parser/ParserException.h ../src/parser/statements/FunctionDeclarationStatement.cpp ../include/parser/statements/FunctionDeclarationStatement.h ../src/parser/statements/VariableDeclarationStatement.cpp ../include/parser/statements/VariableDeclarationStatement.h ../src/parser/statements/MatchStatement.cpp ../include/parser/statements/MatchStatement.h ../src/parser/statements/OpenStatement.cpp ../include/parser/statements/OpenStatement.h ../include/HornerHash.h ../include/parser/ParseError.h ../src/parser/expressions/BracketExpression.cpp ../include/parser/expressions/BracketExpression.h ../src/parser/expressions/LiteralExpression.cpp ../include/parser/expressions/LiteralExpression.h ../src/parser/expressions/FunctionCallExpression.cpp ../include/parser/expressions/FunctionCallExpression.h ../src/parser/expressions/VariableExpression.cpp ../include/parser/expressions/VariableExpression.h ../include/parser/expressions/ArithmeticExpressions.h ../src/parser/expressions/ArithmeticExpressions.cpp ../src/parser/expressions/ExpressionStack.cpp ../include/parser/expressions/ExpressionStack.h ../include/parser/expressions/ComparisonExpressions.h ../src/parser/expressions/ComparisonExpressions.cpp ../src/parser/expressions/LogicalExpressions.cpp ../include/parser/expressions/LogicalExpressions.h ../src/parser/statements/AliasDeclarationStatement.cpp ../include/parser/statements/AliasDeclarationStatement.h ../src/parser/statements/ForStatement.cpp ../include/parser/statements/ForStatement.h ../src/parser/statements/WriteStatement.cpp ../include/parser/statements/WriteStatement.h ../src/parser/statements/IdentifierExpressionStatement.cpp ../include/parser/statements/IdentifierExpressionStatement.h ../src/parser/expressions/FormattedStringExpression.cpp ../include/parser/expressions/FormattedStringExpression.h ../src/parser/statements/IfMatchesStatement.cpp ../include/parser/statements/IfMatchesStatement.h ../src/parser/expressions/ReadLineExpression.cpp ../include/parser/expressions/ReadLineExpression.h ../src/parser/expressions/ReadCharExpression.cpp ../include/parser/expressions/ReadCharExpression.h ../src/parser/expressions/IncrementCharExpression.cpp ../include/parser/expressions/IncrementCharExpression.h ../src/parser/expressions/IncrementLineExpression.cpp ../include/parser/expressions/IncrementLineExpression.h ../src/StringSource.cpp ../include/StringSource.h ../include/TexminatorExceptions.h ../src/parser/Stream.cpp ../include/parser/Stream.h ../src/parser/statements/ExpressionStatement.cpp ../include/parser/statements/ExpressionStatement.h ../src/parser/statements/ArgFunctionStatement.cpp ../include/parser/statements/ArgFunctionStatement.h ../src/parser/statements/GetFunctionStatement.cpp ../include/parser/statements/GetFunctionStatement.h)

target_link_libraries(Texminator_tests Catch2::Catch2)
target_include_directories(Texminator_tests PRIVATE ../include)